# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'

pool:
  vmImage: 'ubuntu-20.04'
  demands: # mendatory tools
  - npm

variables:
  buildConfiguration: 'Release'

steps:
#Although .NET is present in the system, with the task you specif. version to be used
- task: UseDotNet@2
  displayName: 'Use .NET SDK 5.x'
  inputs:
    packageType: sdk
    version: '5.x'


- task: Npm@1
  displayName: 'Run npm install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass Tailspin.SpaceGame.Web/wwwroot --output Tailspin.SpaceGame.Web/wwwroot'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'
 
  #Built-in variables are used:
  #$(Build.DefinitionName) specifies the name of the build pipeline. For example, "SpaceGame-Web-CI."
  #$(Build.BuildId) is a numeric identifier for the completed build, like 115.
  #$(Build.BuildNumber) is name of the completed build. You can configure the format, 
  #but by default the build number includes the current date followed by the build number for that day. An example build number is "20190329.1."
- script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
  displayName: 'Write build info'
  workingDirectory: Tailspin.SpaceGame.Web/wwwroot

# Every command has to be put in separate task
- task: DotNetCoreCLI@2
  displayName: 'Restore project dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build the project - Release'
  inputs:
    command: 'build'
    arguments: '--no-restore --configuration Release'
    projects: '**/*.csproj'